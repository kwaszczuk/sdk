name: "Setup JS"
description: "Install JS toolchain and dependencies (node_modules)"

runs:
  using: "composite"

  steps:
    # https://github.com/actions/setup-node
    - name: Install Node.js
      uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4.2.0
      with:
        node-version-file: ".nvmrc"

    - name: Use corepack to activate pnpm
      run: npm i -g corepack@0.31.0 && corepack enable
      shell: bash

    - name: Audit dependencies (before installing anything)
      # Ignore "low" and "moderate" advisories for now.
      run: pnpm audit --audit-level high
      shell: bash

    - name: Get pnpm store directory (for caching)
      id: pnpm-cache-dir
      run: |
        echo "dir=$(pnpm store path)" >> $GITHUB_OUTPUT
      shell: bash

    # https://github.com/actions/cache
    - name: Setup pnpm store cache
      uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
      with:
        path: ${{ steps.pnpm-cache-dir.outputs.dir }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-
      env:
        SEGMENT_DOWNLOAD_TIMEOUT_MINS: 5

    - name: Audit the lockfiles to catch peer dependency issues
      run: pnpm install -r --lockfile-only
      shell: bash

    - name: Install dependencies
      run: pnpm install -r --frozen-lockfile
      shell: bash

    - name: Install Foundry
      uses: foundry-rs/foundry-toolchain@de808b1eea699e761c404bda44ba8f21aba30b2c # v1.3.1
      with:
        version: stable
        cache: true
        cache-key: ${{ runner.os }}-foundry-stable
        cache-restore-keys: |
          ${{ runner.os }}-foundry-stable-
