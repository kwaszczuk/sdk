name: Publish Packages

on:
  pull_request:
    types: [closed]
    branches:
      - main

permissions:
  contents: write
  packages: write

jobs:
  publish:
    if: >
      github.event.pull_request.merged == true &&
      startsWith(github.event.pull_request.head.ref, 'release/v')
    runs-on: ubuntu-latest
    environment: production # require manual approval for production deployments

    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0 # required for git tags and history

      - name: Extract release tag
        id: extract_tag
        run: |
          REF=${{ github.event.pull_request.head.ref }}
          TAG=${REF#release/}
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Configure Git User
        run: |
          git config user.name "tkhq-deploy"
          git config user.email "github@turnkey.engineering"

      - name: Check for release commit
        run: |
          if ! git log -1 --pretty=%B | grep -q "chore: release packages"; then
            echo "No release commit found. Skipping publish."
            exit 1
          fi

      - name: Setup Node, pnpm, and deps
        uses: ./.github/actions/js-setup

      # download the release artifacts generated by the release workflow
      - name: Download release artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: release-artifacts-${{ steps.extract_tag.outputs.tag }}
          path: .

      - name: Install latest dependencies
        run: pnpm install -r --frozen-lockfile

      - name: Confirm environment variables
        run: |
          if [ -n "${{ secrets.NPM_TOKEN }}" ]; then
            echo "NODE_AUTH_TOKEN is set"
          else
            echo "NODE_AUTH_TOKEN is not set"
            exit 1
          fi
          if [ -n "${{ secrets.GITHUB_TOKEN }}" ]; then
            echo "GITHUB_TOKEN is set"
          else
            echo "GITHUB_TOKEN is not set"
            exit 1
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up NPM .npmrc config for NPM registry
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Debug npm config
        run: |
          if [ -s .npmrc ]; then
            echo ".npmrc exists and is not empty"
          else
            echo ".npmrc not found or empty"
          fi

      - name: Publish to NPM (dry run)
        run: |
          pnpm publish -r --dry-run --no-git-checks --report-summary
          echo "npm publish dry run summary:"
          cat publish-summary.json || echo "No NPM dry run summary generated"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish packages to NPM
        run: |
          echo "Publishing packages to NPM..."
          pnpm publish -r --no-git-checks --report-summary || echo "Publish failed, checking logs..."
          echo "npm publish summary:"
          cat publish-summary.json || echo "No NPM publish summary generated"
          rm .npmrc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        continue-on-error: true

      - name: Set up NPM config for GitHub Packages
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" > .npmrc
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to GitHub Packages (dry run)
        run: |
          pnpm publish -r --dry-run --no-git-checks --report-summary
          echo "GitHub publish dry run summary:"
          cat publish-summary.json || echo "No GitHub publish dry run summary generated"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to GitHub Packages
        run: |
          echo "Publishing packages to GitHub Packages..."
          pnpm publish -r --no-git-checks --report-summary || echo "GitHub Packages publish failed"
          echo "GitHub publish summary:"
          cat publish-summary.json || echo "No GitHub publish summary generated"
          rm .npmrc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true
